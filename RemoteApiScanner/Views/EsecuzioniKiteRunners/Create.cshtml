@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model RemoteApiScanner.Models.EsecuzioniKiteRunner

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@if (!SignInManager.IsSignedIn(User))
{
    <div class="container d-flex">
        <div class="align-self-center">
            <div class="col-6 offset-3 mb-3">
                <img src="Img/Logo-RAS.png" class="w-100" />
            </div>
            <div class="col-10 offset-1 text-center">
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean mauris erat, aliquam volutpat malesuada id, consequat ac nunc. Integer leo lectus, malesuada a mattis quis, semper vitae ex. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Morbi mauris sapien, consequat a fringilla ac, convallis et orci. Maecenas eget quam fringilla, tempor orci eu, hendrerit ante. Vivamus consectetur sed sem a posuere. Suspendisse placerat pharetra velit eget hendrerit. Nullam ultrices leo at dictum interdum. Nullam sodales diam massa, id interdum nibh consectetur eget. Ut et aliquam nunc. Vivamus massa velit, auctor nec odio in, vehicula porttitor sem. Etiam at tortor non nunc iaculis tincidunt. Suspendisse nisl metus, sodales sed tortor ac, consectetur sollicitudin sem.</p>
                <a class="btn btn-outline-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
                <a class="btn btn-outline-success" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </div>
        </div>
    </div>
}
else
{
    <div class="container text-center vertical-center">
        <div class="row mb-3">
            <div class="col-10 offset-1">
                <img src="/Img/Logo-RAS.png" class="w-100" />
            </div>
        </div>
        <form asp-action="Create">
            <div class="col-8 offset-2">
                <div class="input-group border border-success-subtle rounded rounded-4 shadow-sm">
                    <span class="input-group-text border border-0">
                        <i class="bi bi-search"></i>
                    </span>
                    <input id="search-input" type="text" class="form-control text-center border border-0" placeholder="www.example.it">
                    <span class="input-group-text filter-icon border border-0" onmouseover="changeIcon(this, 'bi-filter-square-fill')" onmouseout="changeIcon(this, 'bi-filter')" onclick="showFilters()">
                        <i class="bi bi-filter"></i>
                    </span>
                    <span class="input-group-text send-icon border border-0" onmouseover="changeIcon(this, 'bi-send-fill')" onmouseout="changeIcon(this, 'bi-send')" onclick="search()">
                        <i class="bi bi-send"></i>
                    </span>
                </div>
            </div>

            <div class="col-8 offset-2 my-2" id="filters" style="display: none;">
                <div class="card border-danger-subtle rounded rounded-4 shadow-sm">
                    <div class="card-body">
                        <div class="row">
                            <div class="col">
                                <span class="type fw-bold">Dictionary</span>
                                <div class="col">
                                    <label>
                                        <input type="radio" name="option" id="optionDemo" value="demo">
                                        Demo
                                    </label>
                                </div>
                                <div class="col">
                                    <label>
                                        <input type="radio" name="option" id="optionSmall" value="small">
                                        Small
                                    </label>
                                </div>
                                <div class="col">
                                    <label>
                                        <input type="radio" name="option" id="optionLarge" value="large">
                                        Large
                                    </label>
                                </div>
                            </div>
                            <div class="col">
                                <span class="type fw-bold">Client Error</span>
                                <div class="col">
                                    <label>
                                        <input type="checkbox" name="option" id="option400" value="400">
                                        400: Bad request
                                    </label>
                                </div>
                                <div class="col">
                                    <label>
                                        <input type="checkbox" name="option" id="option401" value="401">
                                        401: Unauthorized
                                    </label>
                                </div>
                                <div class="col">
                                    <label>
                                        <input type="checkbox" name="option" id="option403" value="403">
                                        403: Forbidden
                                    </label>
                                </div>
                                <div class="col">
                                    <label>
                                        <input type="checkbox" name="option" id="option404" value="404">
                                        404: Not found
                                    </label>
                                </div>
                                <div class="col">
                                    <label>
                                        <input type="checkbox" name="option" id="option405" value="405">
                                        405: Method not allowed
                                    </label>
                                </div>
                                <div class="col">
                                    <label>
                                        <input type="checkbox" name="option" id="option426" value="426">
                                        426: Upgrade required
                                    </label>
                                </div>
                            </div>
                            <div class="col">
                                <span class="type fw-bold">Server Error</span>
                                <div class="col">
                                    <label>
                                        <input type="checkbox" name="option" id="option501" value="501">
                                        501: Not implemented
                                    </label>
                                </div>
                                <div class="col">
                                    <label>
                                        <input type="checkbox" name="option" id="option502" value="502">
                                        502: Bad gateway
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>

    </div>
}




@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
        function setCenterDivHeight() {
            const centerDiv = document.querySelector('.container.d-flex');
            const headerHeight = document.querySelector('header').offsetHeight;
            const footerHeight = document.querySelector('footer').offsetHeight;
            const windowHeight = window.innerHeight - 32;
            const visibleHeight = windowHeight - headerHeight - footerHeight;
            centerDiv.style.height = visibleHeight + 'px';
        }

        window.addEventListener('DOMContentLoaded', setCenterDivHeight);
        window.addEventListener('resize', setCenterDivHeight);

        function search() {
            var searchInput = document.getElementById("search-input").value; // Ottieni il valore dell'input di ricerca
            var selectedRoute = ""; //stringa con il valore route (dictionary)
            var selectedFilters = []; // Array per memorizzare i filtri selezionati

            var checkboxes = document.getElementsByName("option"); // Ottieni tutti gli elementi con name="option"

            // Scansiona tutti gli elementi e controlla se sono selezionati
            for (var i = 0; i < checkboxes.length; i++) {
                if (checkboxes[i].checked && i == 0) {
                    selectedRoute = checkboxes[i].value; //imposta il valore route dal checkbox corrispondente
                } else if (checkboxes[i].checked){
                    selectedFilters.push(checkboxes[i].value); // Aggiungi il valore del filtro selezionato all'array
                }
            }

            console.log("Input di ricerca:", searchInput);
            console.log("Routes selezionato:", selectedRoute);
            console.log("Filtri selezionati:", selectedFilters);

            $.ajax({
                url: '/api/Worker',
                method: 'POST',
                data: JSON.stringify({
                    user:"",
                    routes: selectedRoute,
                    link: searchInput,
                    statusCode: selectedFilters.toString(),
                }),
                contentType: 'application/json',
                success: function (response) {
                    // Gestisci la risposta dal controller qui
                    document.getElementById("search-input").value = ""; //svuoto barra di ricerca
                    document.getElementById("filters").style.display = "none"; //nascondo i filtri
                    for (var i = 0; i < checkboxes.length; i++){
                        if (checkboxes[i].checked) {
                            document.getElementById(checkboxes[i].id).checked = false; //deseleziono i filtri
                        }
                    }
                    // Simulate an HTTP redirect to /esecuzioniKiteRunners/Index
                    //window.location.replace(window.location.href + "EsecuzioniKiteRunners/Index");
                },
                error: function (xhr, status, error) {
                    // Gestisci gli eventuali errori qui
                    console.log("ERRORE");
                }
            });
        }

        function showFilters() {
            var card = document.getElementById("filters"); // Ottieni l'elemento della card utilizzando l'ID
            if (card.style.display == "none") {
                card.style.display = "block"; // Mostra la card
            } else {
                card.style.display = "none"; // Nascondi la card
            }
        }


        function changeIcon(element, newIconClass) {
            var icon = element.querySelector('i');
            icon.className = 'bi ' + newIconClass;
        }
    </script>
}
