@model RemoteApiScanner.Models.EsecuzioniKiteRunner

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container text-center vertical-center">
    <div class="row mb-3">
        <div class="col-10 offset-1">
            <img src="https://github.com/assetnote/kiterunner/raw/main/hack/kiterunner.png" alt="Logo KiteRunner" />
        </div>
    </div>
    <form asp-action="Create">
        <div class="col-8 offset-2">
            <div class="input-group border border-success-subtle rounded rounded-4 shadow-sm">
                <span class="input-group-text border border-0">
                    <i class="bi bi-search"></i>
                </span>
                <input id="search-input" type="text" class="form-control text-center border border-0" placeholder="www.example.it">
                <span class="input-group-text filter-icon border border-0" onmouseover="changeIcon(this, 'bi-filter-square-fill')" onmouseout="changeIcon(this, 'bi-filter')" onclick="showFilters()">
                    <i class="bi bi-filter"></i>
                </span>
                <span class="input-group-text send-icon border border-0" onmouseover="changeIcon(this, 'bi-send-fill')" onmouseout="changeIcon(this, 'bi-send')" onclick="search()">
                    <i class="bi bi-send"></i>
                </span>
            </div>
        </div>

        <div class="col-8 offset-2 my-2" id="filters" style="display: none;">
            <div class="card border-danger-subtle rounded rounded-4 shadow-sm">
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <span class="type">Dictionary</span>
                            <div class="col">
                                <label>
                                    <input type="radio" name="option" value="demo">
                                    Demo
                                </label>
                            </div>
                            <div class="col">
                                <label>
                                    <input type="radio" name="option" value="small">
                                    Small
                                </label>
                            </div>
                            <div class="col">
                                <label>
                                    <input type="radio" name="option" value="large">
                                    Large
                                </label>
                            </div>
                        </div>
                        <div class="col">
                            <span class="type">Client Error</span>
                            <div class="col">
                                <label>
                                    <input type="checkbox" name="option" value="400">
                                    400: Bad request
                                </label>
                            </div>
                            <div class="col">
                                <label>
                                    <input type="checkbox" name="option" value="401">
                                    401: Unauthorized
                                </label>
                            </div>
                            <div class="col">
                                <label>
                                    <input type="checkbox" name="option" value="403">
                                    403: Forbidden
                                </label>
                            </div>
                            <div class="col">
                                <label>
                                    <input type="checkbox" name="option" value="404">
                                    404: Not found
                                </label>
                            </div>
                            <div class="col">
                                <label>
                                    <input type="checkbox" name="option" value="405">
                                    405: Method not allowed
                                </label>
                            </div>
                            <div class="col">
                                <label>
                                    <input type="checkbox" name="option" value="426">
                                    426: Upgrade required
                                </label>
                            </div>
                        </div>
                        <div class="col">
                            <span class="type">Server Error</span>
                            <div class="col">
                                <label>
                                    <input type="checkbox" name="option" value="501">
                                    501: Not implemented
                                </label>
                            </div>
                            <div class="col">
                                <label>
                                    <input type="checkbox" name="option" value="502">
                                    502: Bad gateway
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    
</div>




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function search() {
            var searchInput = document.getElementById("search-input").value; // Ottieni il valore dell'input di ricerca
            var selectedFilters = []; // Array per memorizzare i filtri selezionati

            var checkboxes = document.getElementsByName("option"); // Ottieni tutti gli elementi con name="option"

            // Scansiona tutti gli elementi e controlla se sono selezionati
            for (var i = 0; i < checkboxes.length; i++) {
                if (checkboxes[i].checked) {
                    selectedFilters.push(checkboxes[i].value); // Aggiungi il valore del filtro selezionato all'array
                }
            }

            console.log("Input di ricerca:", searchInput);
            console.log("Filtri selezionati:", selectedFilters);
        }

        function showFilters() {
            var card = document.getElementById("filters"); // Ottieni l'elemento della card utilizzando l'ID
            if (card.style.display == "none") {
                card.style.display = "block"; // Mostra la card
            } else {
                card.style.display = "none"; // Nascondi la card
            }
        }


        function changeIcon(element, newIconClass) {
            var icon = element.querySelector('i');
            icon.className = 'bi ' + newIconClass;
        }
    </script>
}
